name: Telegram Bot Test (1 hour)

on:
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install requests
        run: pip install requests

      - name: Run Telegram Bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          python - <<'PY'
          import os, requests, time

          TOKEN = os.environ['TELEGRAM_BOT_TOKEN']
          API = f"https://api.telegram.org/bot{TOKEN}"

          def get_updates(offset=None):
              r = requests.get(f"{API}/getUpdates", params={"timeout": 30, "offset": offset})
              return r.json().get("result", [])

          def send_message(chat_id, text):
              requests.post(f"{API}/sendMessage", data={"chat_id": chat_id, "text": text})

          def handle_document(chat_id, file_id):
              g = requests.get(f"{API}/getFile?file_id={file_id}").json()
              file_path = g["result"]["file_path"]
              link = f"https://api.telegram.org/file/bot{TOKEN}/{file_path}"
              send_message(chat_id, f"üì• ŸÑ€åŸÜ⁄© ÿØÿßŸÜŸÑŸàÿØ ŸÅÿß€åŸÑ:\n{link}")

          print("ü§ñ Bot started, running for ~1 hour...")
          offset = None
          start_time = time.time()

          while True:
              updates = get_updates(offset)
              for u in updates:
                  offset = u["update_id"] + 1
                  msg = u.get("message", {})
                  chat_id = msg.get("chat", {}).get("id")

                  if "text" in msg and msg["text"] == "/start":
                      send_message(chat_id, "ÿ≥ŸÑÿßŸÖ üëã ŸÅÿß€åŸÑ ÿ±Ÿà ÿ®ŸÅÿ±ÿ≥ÿ™ ÿ™ÿß ŸÑ€åŸÜ⁄©ÿ¥ ÿ±Ÿà ÿ®ÿØŸÖ.")

                  if "document" in msg:
                      file_id = msg["document"]["file_id"]
                      handle_document(chat_id, file_id)

              if time.time() - start_time > 3600:  # 1 ÿ≥ÿßÿπÿ™
                  print("‚è∞ Time is up, bot shutting down.")
                  break
              time.sleep(2)
          PY
