name: Telegram Bot with Ngrok

on:
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install requests pyngrok

      - name: Run Telegram Bot with Ngrok
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          python - <<'PY'
          import os, requests, time, uuid
          from http.server import SimpleHTTPRequestHandler, HTTPServer
          import threading
          from pyngrok import ngrok

          TOKEN = os.environ['TELEGRAM_BOT_TOKEN']
          API = f"https://api.telegram.org/bot{TOKEN}"

          # üìÇ ÿ≥ÿßÿÆÿ™ ŸæŸàÿ¥Ÿá ŸÖÿÆÿµŸàÿµ ŸÅÿß€åŸÑ‚ÄåŸáÿß
          os.makedirs("files", exist_ok=True)
          os.chdir("files")

          # üìå ÿ±ÿßŸá‚ÄåÿßŸÜÿØÿßÿ≤€å HTTP Server ŸÑŸà⁄©ÿßŸÑ
          def start_server():
              httpd = HTTPServer(('0.0.0.0', 8080), SimpleHTTPRequestHandler)
              httpd.serve_forever()

          threading.Thread(target=start_server, daemon=True).start()

          # üìå Ngrok
          auth = os.environ.get("NGROK_AUTH_TOKEN")
          if auth:
              ngrok.set_auth_token(auth)
          public_url = ngrok.connect(8080, "http").public_url
          print("üåç Public URL:", public_url)

          def get_updates(offset=None):
              r = requests.get(f"{API}/getUpdates", params={"timeout": 30, "offset": offset})
              return r.json().get("result", [])

          def send_message(chat_id, text):
              requests.post(f"{API}/sendMessage", data={"chat_id": chat_id, "text": text})

          def download_file(file_id, filename):
              g = requests.get(f"{API}/getFile?file_id={file_id}").json()
              if not g.get("ok"):
                  print("‚ùå getFile failed:", g)
                  return None
              file_path = g["result"]["file_path"]
              url = f"https://api.telegram.org/file/bot{TOKEN}/{file_path}"
              data = requests.get(url).content
              with open(filename, "wb") as f:
                  f.write(data)
              return filename

          def handle_media(chat_id, media_type, msg):
              if media_type == "document":
                  file_id = msg["document"]["file_id"]
                  orig_name = msg["document"].get("file_name", "document.bin")
              elif media_type == "video":
                  file_id = msg["video"]["file_id"]
                  orig_name = "video.mp4"
              elif media_type == "photo":
                  file_id = msg["photo"][-1]["file_id"]
                  orig_name = "photo.jpg"
              else:
                  send_message(chat_id, "‚ùå ŸÜŸàÿπ ŸÅÿß€åŸÑ Ÿæÿ¥ÿ™€åÿ®ÿßŸÜ€å ŸÜŸÖ€å‚Äåÿ¥ŸàÿØ.")
                  return

              # üìå ŸÜÿßŸÖ‚Äå⁄Øÿ∞ÿßÿ±€å €å⁄©ÿ™ÿß
              unique_name = f"{uuid.uuid4().hex}_{orig_name}"
              local_file = download_file(file_id, unique_name)

              if local_file:
                  link = f"{public_url}/{local_file}"
                  send_message(chat_id, f"üì• ŸÑ€åŸÜ⁄© ÿØÿßŸÜŸÑŸàÿØ:\n{link}")
              else:
                  send_message(chat_id, "‚ùå ŸÜÿ™ŸàŸÜÿ≥ÿ™ŸÖ ŸÅÿß€åŸÑ ÿ±Ÿà ÿØÿßŸÜŸÑŸàÿØ ⁄©ŸÜŸÖ. ÿØŸàÿ®ÿßÿ±Ÿá ÿßŸÖÿ™ÿ≠ÿßŸÜ ⁄©ŸÜ.")

          print("ü§ñ Bot started, running for ~1 hour...")
          offset = None
          start_time = time.time()

          while True:
              updates = get_updates(offset)
              for u in updates:
                  offset = u["update_id"] + 1
                  msg = u.get("message", {})
                  chat_id = msg.get("chat", {}).get("id")

                  if "text" in msg and msg["text"] == "/start":
                      send_message(chat_id, "ÿ≥ŸÑÿßŸÖ üëã ŸÅÿß€åŸÑÿå Ÿà€åÿØ€åŸà €åÿß ÿπ⁄©ÿ≥ ÿ±Ÿà ÿ®ŸÅÿ±ÿ≥ÿ™ ÿ™ÿß ŸÑ€åŸÜ⁄©ÿ¥Ÿà ÿ®Ÿáÿ™ ÿ®ÿØŸÖ.")

                  if "document" in msg:
                      handle_media(chat_id, "document", msg)
                  elif "video" in msg:
                      handle_media(chat_id, "video", msg)
                  elif "photo" in msg:
                      handle_media(chat_id, "photo", msg)

              if time.time() - start_time > 3600:  # ‚è∞ €å⁄© ÿ≥ÿßÿπÿ™
                  print("‚è∞ Time is up, bot shutting down.")
                  break
              time.sleep(2)
          PY
